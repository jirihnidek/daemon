name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform-agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Create build directory
      # Create build directory
      run: rm -rf ${{github.workspace}}/build; mkdir ${{github.workspace}}/build

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build-rpm:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: fedora:rawhide
      options: --security-opt seccomp=unconfined
    steps:
      # Install git and other tools first to be able to use 'actions/checkout@v2' properly
      - name: Install required packages
        run: dnf install --nogpgcheck -y tito gcc make cmake git-core

      # Clone repository and set everything for building of RPMs
      - name: Checkout
        uses: actions/checkout@v4

      # This step is required so Tito can properly read git history
      # See https://github.com/actions/checkout/issues/766
      - name: Trust git repository path
        run: |
          git config --global --add safe.directory '*'

      - name: Create build directory
        run: rm -rf ./rpm_build; mkdir ./rpm_build

      - name: Build RPM package
        run: tito build --test --rpm --verbose --debug -o ./rpm_build --no-cleanup

      - name: Store source RPM as artifact
        uses: actions/upload-artifact@v2
        with:
          name: Source RPM
          path: ./rpm_build/*.rpm

      - name: Store binary RPMs as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Binary RPMs
          # TODO: replace x86_64 with result of 'uname -m'
          path: ./rpm_build/x86_64/*.rpm
